services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - todo-net

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - todo-net 

  mariadb:
    image: mariadb
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: w123
      MYSQL_DATABASE: todo_maria
      MYSQL_USER: root
      MYSQL_PASSWORD: w123
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - todo-net

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - todo-net

  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"  # 외부:내부
    networks:
      - todo-net

  todo-backend:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - mariadb
      - mongodb
      - kafka
    networks:
      - todo-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/todo_maria
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: w123
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/todo_mongo

volumes:
  mariadb_data:
  mongodb_data:

networks:
  todo-net:
    name: todo-net
    driver: bridge

